@using Inventory.Models;

@{
    ViewBag.Title = "AssignedEquipment";
}
@{
    List<Customer> customerList = ViewBag.customerList;
    List<EquipmentList> equipmentLists = ViewBag.lstEquipment;
    string jsArr = Newtonsoft.Json.JsonConvert.SerializeObject(equipmentLists);

}
@{
    var mode = Request["mode"];

    var CID = Request["cid"];
    var EID = Request["eid"];
    var QT = Request["qt"];


    var isUpdate = mode == "Update";

}

<script>
    $(document).ready(function () {
        // Your code here
        var eid = @Html.Raw(Json.Encode(EID));
        $('#exampleFormControlInput1').val(eid);
        var cid = @Html.Raw(Json.Encode(CID));
        $('#exampleFormControlInput2').val(cid);
        var qt = @Html.Raw(Json.Encode(QT));
        $('#input3').val(qt);

        ShowEquipmentStock($('#exampleFormControlInput1'));
    });
    var Eq_listArr = JSON.parse('@Html.Raw(jsArr)');
    console.log(Eq_listArr);

    function ShowEquipmentStock(cntrol) {
      
        var equipmentID = $(cntrol).val();
        $.each(Eq_listArr, function (index, obj) {
            if (obj.Equipmentid == parseInt(equipmentID)) {
                $('#spnStockStatus').html("Available Stock:" + obj.Quantity)
                $('#hdAvailableStock').val(obj.Quantity)
            }
        })    
    }
    function validateInput(control) {
        if (parseInt($(control).val()) > parseInt($('#hdAvailableStock').val())) {
            alert("value must be<=" + $('#hdAvailableStock').val())
            $(control).val('')
        }
        else if (parseInt($(control).val()) < 0) {
            alert("Must be positive")
            $(control).val('')
        }
        
    }
</script>

@{ 
    if(mode== "Update")
    {
        <h2>Update Assigned History</h2>
    }
    else
    {
        <h2>New Assigned History</h2>
    }
}

<form method="post" action="@Url.Action("NewAssignedEquipment","Dashboard")">
    <div class="card" ">
        <div class="card-body">
            <label for="exampleFormControlInput1" class="form-label" ">Equipment Name</label>
            <select name="txtEquipmentID" class="form-control" id="exampleFormControlInput1" placeholder="EquipmentID" onchange="ShowEquipmentStock(this)">

                @{
                    foreach (var obj in equipmentLists)
                    {
                        <option value="@obj.Equipmentid">
                            @obj.EquipmentName
                        </option>
                    }
                }
            </select>
            <span id="spnStockStatus"></span>
            <input type="hidden" id="hdAvailableStock" />
            <br />
            <label for="exampleFormControlInput2" class="form-label" ">Customer Name</label>
            <select name="txtCustomerID" class="form-control" id="exampleFormControlInput2" placeholder="CustomerID">

                @{
                    foreach (var obj1 in customerList)
                    {
                        <option value="@obj1.CustomerID">
                            @obj1.CustomertName
                        </option>
                    }
                }
            </select>
            <br />
            <div class="mb-3">
                <label for="input3" class="form-label">Quantity</label>
                <input type="text" name="txtQuantity" id="input3" class="form-control" placeholder="Quantity" onblur="validateInput(this)">
            </div>

            <input type="submit" id="btnSubmit" class="btn btn-primary" name="btnSubmit" value="@(isUpdate ? "Update" : "Save")" />
        </div>
